# $Update the apt package index and install packages to allow apt to use a repository over HTTPS:
#
# ￼
# $ sudo apt-get update
#
# $ sudo apt-get install \
#     ca-certificates \
#     curl \
#     gnupg \
#     lsb-release
- name: Update the apt package index and install packages to allow apt to use a repository over HTTPS
  apt:
    update_cache: yes
    pkg:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
  become: yes
# 2. Add Docker’s official GPG key:
#
# ￼
# $ sudo mkdir -m 0755 -p /etc/apt/keyrings
# $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
- name: Add Docker’s official GPG key
  shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/trusted.gpg.d/docker.gpg
  args:
    creates: /etc/apt/trusted.gpg.d/docker.gpg
  become: yes
# 3. Use the following command to set up the repository:
#
# ￼
# $ echo \
#   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
#   $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

- name: setup the docker repository
  lineinfile:
    line: "deb [arch={{cpu_arch}} signed-by=/etc/apt/trusted.gpg.d/docker.gpg] https://download.docker.com/linux/ubuntu {{ansible_facts['distribution_release']}} stable" 
    dest: /etc/apt/sources.list.d/docker.list
    create: yes
  become: yes

# sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
- name: install docker
  apt:
    update_cache: yes
    pkg:
      - docker-ce
      - docker-ce-cli
      - docker-buildx-plugin
      - docker-compose-plugin
      - containerd.io
  become: yes
